import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Lab 1: Interactive Input',
      theme: ThemeData(
        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),
        useMaterial3: true,
      ),
      home: const MyHomePage(title: 'Interactive Counter with Input'),
    );
  }
}

class MyHomePage extends StatefulWidget {
  const MyHomePage({
    required this.title,
    super.key,
  }); // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ 'required' —Ç–∞ 'super.key' –Ω–∞ –ø–æ—á–∞—Ç–∫—É

  final String title;

  @override
  State<MyHomePage> createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  int _counter = 0;
  // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä–∞ –¥–ª—è TextField
  final TextEditingController _inputController = TextEditingController();
  String _message = 'Enter a number or "Avada Kedavra" to interact.';

  // –ì–æ–ª–æ–≤–Ω–∏–π –º–µ—Ç–æ–¥ –æ–±—Ä–æ–±–∫–∏ –≤–≤–µ–¥–µ–Ω–Ω—è
  void _processInput() {
    // 1. –û—Ç—Ä–∏–º–∞—Ç–∏ —Ç–∞ –æ—á–∏—Å—Ç–∏—Ç–∏ —Ç–µ–∫—Å—Ç
    final String inputText = _inputController.text.trim();

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ 1: –ú–∞–≥—ñ—á–Ω–µ —Å–ª–æ–≤–æ (–±–µ–∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è —Ä–µ–≥—ñ—Å—Ç—Ä—É)
    if (inputText.toLowerCase() == 'avada kedavra') {
      setState(() {
        _counter = 0;
        _message = 'üíÄ Spell Activated! Counter reset.';
      });
    } else {
      // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ 2: –°–ø—Ä–æ–±–∞ –∫–æ–Ω–≤–µ—Ä—Ç—É–≤–∞—Ç–∏ –≤ —á–∏—Å–ª–æ
      final int? number = int.tryParse(inputText);

      if (number != null) {
        // –Ø–∫—â–æ —á–∏—Å–ª–æ, –¥–æ–¥–∞—î–º–æ –π–æ–≥–æ –¥–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫–∞
        setState(() {
          _counter += number;
          _message = '‚ú® Added $number to the counter.';
        });
      } else {
        // –Ø–∫—â–æ –Ω–µ —á–∏—Å–ª–æ —ñ –Ω–µ –º–∞–≥—ñ—á–Ω–µ —Å–ª–æ–≤–æ
        setState(() {
          _message = '‚ùå Invalid input. Please enter a number or the correct spell.';
        });
      }
    }

    // –û—á–∏—â–µ–Ω–Ω—è –ø–æ–ª—è –≤–≤–æ–¥—É
    _inputController.clear();
  }

  // –û–±–æ–≤'—è–∑–∫–æ–≤–æ –æ—á–∏—â–∞—î–º–æ –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –≤–∏—Ç–æ–∫—É –ø–∞–º'—è—Ç—ñ
  @override
  void dispose() {
    _inputController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Theme.of(context).colorScheme.inversePrimary,
        title: Text(widget.title),
      ),
      body: Center(
        child: Padding(
          padding: const EdgeInsets.all(24.0),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
              // –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
              Text(
                _message,
                textAlign: TextAlign.center,
                style: const TextStyle(
                  fontSize: 16,
                  fontStyle: FontStyle.italic,
                  color: Colors.grey,
                ),
              ),
              const SizedBox(height: 20),
              // –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ª—ñ—á–∏–ª—å–Ω–∏–∫–∞
              Text(
                '$_counter',
                style: Theme.of(context).textTheme.headlineLarge,
              ),
              const SizedBox(height: 30),
              // >>> –Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –ø–æ–ª–µ –≤–≤–æ–¥—É <<<
              TextField(
                controller: _inputController,
                keyboardType: TextInputType.text,
                decoration: InputDecoration(
                  labelText: 'Enter Value',
                  hintText: 'Number or Spell',
                  border: const OutlineInputBorder(),
                  // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–∏—Ö
                  suffixIcon: IconButton(
                    icon: const Icon(Icons.send),
                    onPressed: _processInput,
                  ),
                ),
                // –û–±—Ä–æ–±–∫–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è Enter
                onSubmitted: (_) => _processInput(),
              ),
            ],
          ),
        ),
      ),
      // –ö–Ω–æ–ø–∫–∞ FloatingActionButton —Ç–µ–ø–µ—Ä —Ç–∞–∫–æ–∂ –≤–∏–∫–ª–∏–∫–∞—î _processInput
      floatingActionButton: FloatingActionButton.extended(
        onPressed: _processInput,
        tooltip: 'Process Input',
        label: const Text('Process'),
        icon: const Icon(Icons.flash_on),
      ),
    );
  }
}